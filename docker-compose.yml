version: '3'

services:
  pgdb:
    container_name: pgdb
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_ARGS='--encoding=UTF8'
      - LANG=ru_RU.UTF8
      - LANGUAGE=ru_RU.UTF8
      - LC_ALL=ru_RU.UTF8
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - type: bind
        source: ./pgdb/data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./pgdb/init
        target: /docker-entrypoint-initdb.d
#    networks:
#      - postgres

  backend:
    container_name: backend
    build: ./backend
    image: backend:latest
    restart: always
    depends_on:
      - pgdb
    environment:
#      - DATABASE_URL=postgresql+asyncpg://${DATABASE_USER}:${DATABASE_PASS}@{DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
#    command: python -c "import tensorflow as tf;tf.test.gpu_device_name()"
#    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port 80 --reload"
    ports:
      - ${BACK_PORT}:80
    volumes:
      - type: bind
        source: ./backend/app/
        target: /code/app/
#    networks:
#      - postgres


  minio:
    container_name: minio
    image: quay.io/minio/minio
    restart: always
    command: server /data --console-address ":9090"
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASS}
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_CONSOLE}:9090
    volumes:
      - type: bind
        source: ./minio/data
        target: /data



#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8080:8080

#volumes:
#  habrdb-data:
#    external: true


#networks:
#  postgres:
#    driver: bridge